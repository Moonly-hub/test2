local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Universe",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "loading",
   LoadingSubtitle = "by Chloe",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("Main", 4483362458) -- Title, Image

local SpinTab = Window:CreateTab("Spin", 4483362458) 

local Section = MainTab:CreateSection("Features")
local Divider = MainTab:CreateDivider()

local Section = SpinTab:CreateSection("Features")
local Divider = SpinTab:CreateDivider()

MainTab:CreateToggle({
    Name = "Instant Kill",
    CurrentValue = false, -- Default state of the toggle
    Flag = "InstaKill", -- A flag to save its state in the config
    Callback = function(Value)
        getgenv().InstaKill = Value -- Update the global variable based on the toggle state
        
        -- Place your original code here
        game:GetService("RunService").Heartbeat:Connect(function()
            if getgenv().InstaKill then
                local localPlayer = game.Players.LocalPlayer
                local jogador = localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart")

                if jogador then
                    local distanciaLimite = 100 -- Change this value if needed

                    for _, mob in pairs(workspace.Objects.Mobs:GetChildren()) do
                        if mob:FindFirstChild("HumanoidRootPart") then
                            local distancia = (mob.HumanoidRootPart.Position - jogador.Position).magnitude
                            if distancia < distanciaLimite then
                                local humanoide = mob:FindFirstChild("Humanoid")
                                if humanoide then
                                    humanoide.Health = 0
                                end
                            end
                        end
                    end
                end
            end
        end)
    end
})

local Button = MainTab:CreateButton({
    Name = "Op Quest",
Callback = Function()
   if Toggle.Value then
        getgenv().AutoFarm1 = true
        local processing = false

        game:GetService("RunService").Heartbeat:Connect(function()
            if getgenv().AutoFarm1 and not processing then
                processing = true

                local localPlayer = game.Players.LocalPlayer
                local ohTable1 = {
                    ["type"] = "Kill",
                    ["set"] = "Yuki Fortress Set",
                    ["rewards"] = {
                        ["essence"] = 40,
                        ["chestMeter"] = 79,
                        ["exp"] = 8850000,
                        ["cash"] = 51000
                    },
                    ["rewardsText"] = "8.85 Mi EXP | Universe Hub",
                    ["difficulty"] = 3,
                    ["title"] = "Defeat",
                    ["level"] = 430,
                    ["grade"] = localPlayer.ReplicatedData.grade.Value,
                    ["subtitle"] = "a Curse User"
                }

                pcall(function()
                    game:GetService("ReplicatedStorage").Remotes.Server.Data.TakeQuest:InvokeServer(ohTable1)
                end)

                task.wait(1)

                local questData = localPlayer:FindFirstChild("ReplicatedTempData") and localPlayer.ReplicatedTempData:FindFirstChild("quest")
                if not questData then
                    pcall(function()
                        game:GetService("ReplicatedStorage").Remotes.Server.Data.TakeQuest:InvokeServer(ohTable1)
                    end)
                end

                local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
                local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
                local questMarker = localPlayer.PlayerGui:WaitForChild("QuestMarker")
                local adornee = questMarker.Adornee

                if adornee and adornee:IsA("BasePart") then
                    humanoidRootPart.CFrame = adornee.CFrame
                end

                task.wait(getgenv().WaitTime)
                processing = false
            end
        end)
    else
        getgenv().AutoFarm1 = false
    end
end)
